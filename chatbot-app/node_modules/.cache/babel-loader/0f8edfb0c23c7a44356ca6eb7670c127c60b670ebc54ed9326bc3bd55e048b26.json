{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.handleJavascriptList = () => {\n      const message = this.createChatBotMessage(\"Fantastic, I've got the following resources for you on JavaScript:\", {\n        widget: \"javascriptLinks\" // Show JavaScript links widget\n      });\n      this.updateChatbotState(message);\n    };\n    this.handleDataVisualizationList = () => {\n      const message = this.createChatBotMessage(\"Fantastic, I've got the following resources for you on Data Visualization:\", {\n        widget: \"dataVisualizationLinks\" // Show Data Visualization links widget\n      });\n      this.updateChatbotState(message);\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  updateChatbotState(message) {\n    // Append the message to the chatbot state\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","handleJavascriptList","message","widget","updateChatbotState","handleDataVisualizationList","setState","prevState","messages"],"sources":["/Users/anmol.varshney/Desktop/React Chatbot/chatbot-app/src/Actions/ActionProvider.js"],"sourcesContent":["class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n\n  handleJavascriptList = () => {\n    const message = this.createChatBotMessage(\n      \"Fantastic, I've got the following resources for you on JavaScript:\",\n      {\n        widget: \"javascriptLinks\", // Show JavaScript links widget\n      }\n    );\n\n    this.updateChatbotState(message);\n  };\n\n  handleDataVisualizationList = () => {\n    const message = this.createChatBotMessage(\n      \"Fantastic, I've got the following resources for you on Data Visualization:\",\n      {\n        widget: \"dataVisualizationLinks\", // Show Data Visualization links widget\n      }\n    );\n\n    this.updateChatbotState(message);\n  };\n\n  updateChatbotState(message) {\n    // Append the message to the chatbot state\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  }\n}\n\nexport default ActionProvider;\n"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAAA,KAKhDC,oBAAoB,GAAG,MAAM;MAC3B,MAAMC,OAAO,GAAG,IAAI,CAACH,oBAAoB,CACvC,oEAAoE,EACpE;QACEI,MAAM,EAAE,iBAAiB,CAAE;MAC7B,CACF,CAAC;MAED,IAAI,CAACC,kBAAkB,CAACF,OAAO,CAAC;IAClC,CAAC;IAAA,KAEDG,2BAA2B,GAAG,MAAM;MAClC,MAAMH,OAAO,GAAG,IAAI,CAACH,oBAAoB,CACvC,4EAA4E,EAC5E;QACEI,MAAM,EAAE,wBAAwB,CAAE;MACpC,CACF,CAAC;MAED,IAAI,CAACC,kBAAkB,CAACF,OAAO,CAAC;IAClC,CAAC;IAxBC,IAAI,CAACH,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACO,QAAQ,GAAGN,YAAY;EAC9B;EAwBAI,kBAAkBA,CAACF,OAAO,EAAE;IAC1B;IACA,IAAI,CAACI,QAAQ,CAAEC,SAAS,KAAM;MAC5B,GAAGA,SAAS;MACZC,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAQ,EAAEN,OAAO;IAC3C,CAAC,CAAC,CAAC;EACL;AACF;AAEA,eAAeL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}