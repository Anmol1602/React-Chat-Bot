{"ast":null,"code":"class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.handleJavascriptList = () => {\n      const message1 = this.createChatBotMessage(\"Fantastic, I've got the following resources for you on JavaScript:\", {\n        widget: \"javascriptLinks\"\n      });\n      const message2 = this.createChatBotMessage(\"Here's more information on Data Visualization:\", {\n        widget: \"dataVisualizationLinks\"\n      });\n      this.updateChatbotState(message1);\n      this.updateChatbotState(message2);\n    };\n    this.handleDataVisualizationList = () => {\n      const message = this.createChatBotMessage(\"Fantastic, I've got the following resources for you on Data Visualization:\", {\n        widget: \"dataVisualizationLinks\"\n      });\n      this.updateChatbotState(message);\n    };\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n  updateChatbotState(message) {\n    // Append the message to the chatbot state\n    this.setState(prevState => ({\n      ...prevState,\n      messages: [...prevState.messages, message]\n    }));\n  }\n}\nexport default ActionProvider;","map":{"version":3,"names":["ActionProvider","constructor","createChatBotMessage","setStateFunc","handleJavascriptList","message1","widget","message2","updateChatbotState","handleDataVisualizationList","message","setState","prevState","messages"],"sources":["/Users/anmol.varshney/Desktop/React Chatbot/chatbot-app/src/Actions/ActionProvider.js"],"sourcesContent":["class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n\n  handleJavascriptList = () => {\n    const message1 = this.createChatBotMessage(\n      \"Fantastic, I've got the following resources for you on JavaScript:\",\n      {\n        widget: \"javascriptLinks\",\n      }\n    );\n\n    const message2 = this.createChatBotMessage(\n      \"Here's more information on Data Visualization:\",\n      {\n        widget: \"dataVisualizationLinks\",\n      }\n    );\n\n    this.updateChatbotState(message1);\n    this.updateChatbotState(message2);\n  };\n\n  handleDataVisualizationList = () => {\n    const message = this.createChatBotMessage(\n      \"Fantastic, I've got the following resources for you on Data Visualization:\",\n      {\n        widget: \"dataVisualizationLinks\",\n      }\n    );\n\n    this.updateChatbotState(message);\n  };\n\n  updateChatbotState(message) {\n    // Append the message to the chatbot state\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  }\n}\n\nexport default ActionProvider;\n"],"mappings":"AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAACC,oBAAoB,EAAEC,YAAY,EAAE;IAAA,KAKhDC,oBAAoB,GAAG,MAAM;MAC3B,MAAMC,QAAQ,GAAG,IAAI,CAACH,oBAAoB,CACxC,oEAAoE,EACpE;QACEI,MAAM,EAAE;MACV,CACF,CAAC;MAED,MAAMC,QAAQ,GAAG,IAAI,CAACL,oBAAoB,CACxC,gDAAgD,EAChD;QACEI,MAAM,EAAE;MACV,CACF,CAAC;MAED,IAAI,CAACE,kBAAkB,CAACH,QAAQ,CAAC;MACjC,IAAI,CAACG,kBAAkB,CAACD,QAAQ,CAAC;IACnC,CAAC;IAAA,KAEDE,2BAA2B,GAAG,MAAM;MAClC,MAAMC,OAAO,GAAG,IAAI,CAACR,oBAAoB,CACvC,4EAA4E,EAC5E;QACEI,MAAM,EAAE;MACV,CACF,CAAC;MAED,IAAI,CAACE,kBAAkB,CAACE,OAAO,CAAC;IAClC,CAAC;IAhCC,IAAI,CAACR,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACS,QAAQ,GAAGR,YAAY;EAC9B;EAgCAK,kBAAkBA,CAACE,OAAO,EAAE;IAC1B;IACA,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;MAC5B,GAAGA,SAAS;MACZC,QAAQ,EAAE,CAAC,GAAGD,SAAS,CAACC,QAAQ,EAAEH,OAAO;IAC3C,CAAC,CAAC,CAAC;EACL;AACF;AAEA,eAAeV,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}