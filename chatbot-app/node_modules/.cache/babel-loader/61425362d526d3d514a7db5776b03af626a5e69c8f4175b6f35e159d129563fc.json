{"ast":null,"code":"var _jsxFileName = \"/Users/anmol.varshney/Desktop/React Chatbot/chatbot-app/src/Component/ChatbotComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\nimport { useTheme } from \"../Component/ThemeContext\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"react-chatbot-kit/build/main.css\"; // Import the chatbot styles\nimport config from \"../Config/ChatbotConfig\";\nimport MessageParser from \"../Parser/MessageParser\";\nimport ActionProvider from \"../Actions/ActionProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatbotComponent() {\n  _s();\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  const navigate = useNavigate(); // Initialize navigation\n\n  // Dynamically apply the theme class to the body or chatbot container\n  useEffect(() => {\n    document.body.className = theme;\n  }, [theme]);\n\n  // Function to handle closing the chatbot and navigating back to the landing page\n  const handleCloseChat = () => {\n    navigate(\"/\"); // Navigate to the landing page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCloseChat,\n        className: \"close-chat-button\",\n        children: \"Close Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      messageParser: MessageParser,\n      actionProvider: ActionProvider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      className: \"theme-toggle-btn\",\n      children: [\"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Mode\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatbotComponent, \"QNQ0kk8VSL/Y2JHm3B17ieEQASg=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = ChatbotComponent;\nexport default ChatbotComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatbotComponent\");","map":{"version":3,"names":["React","useEffect","useNavigate","useTheme","Chatbot","config","MessageParser","ActionProvider","jsxDEV","_jsxDEV","ChatbotComponent","_s","theme","toggleTheme","navigate","document","body","className","handleCloseChat","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","messageParser","actionProvider","_c","$RefreshReg$"],"sources":["/Users/anmol.varshney/Desktop/React Chatbot/chatbot-app/src/Component/ChatbotComponent.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate for navigation\nimport { useTheme } from \"../Component/ThemeContext\";\nimport Chatbot from \"react-chatbot-kit\";\nimport \"react-chatbot-kit/build/main.css\"; // Import the chatbot styles\nimport config from \"../Config/ChatbotConfig\";\nimport MessageParser from \"../Parser/MessageParser\";\nimport ActionProvider from \"../Actions/ActionProvider\";\n\nfunction ChatbotComponent() {\n  const { theme, toggleTheme } = useTheme();\n  const navigate = useNavigate(); // Initialize navigation\n\n  // Dynamically apply the theme class to the body or chatbot container\n  useEffect(() => {\n    document.body.className = theme;\n  }, [theme]);\n\n  // Function to handle closing the chatbot and navigating back to the landing page\n  const handleCloseChat = () => {\n    navigate(\"/\"); // Navigate to the landing page\n  };\n\n  return (\n    <div className={`chatbot-container ${theme}`}>\n      <div className=\"chatbot-header\">\n        <h2>Chatbot</h2>\n        <button onClick={handleCloseChat} className=\"close-chat-button\">\n          Close Chat\n        </button>\n      </div>\n      <Chatbot\n        config={config}\n        messageParser={MessageParser}\n        actionProvider={ActionProvider}\n      />\n      <button onClick={toggleTheme} className=\"theme-toggle-btn\">\n        Switch to {theme === 'light' ? 'Dark' : 'Light'} Mode\n      </button>\n    </div>\n  );\n}\n\nexport default ChatbotComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAO,kCAAkC,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,cAAc,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC;EACzC,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGL,KAAK;EACjC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAE,qBAAqBL,KAAK,EAAG;IAAAO,QAAA,gBAC3CV,OAAA;MAAKQ,SAAS,EAAC,gBAAgB;MAAAE,QAAA,gBAC7BV,OAAA;QAAAU,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBd,OAAA;QAAQe,OAAO,EAAEN,eAAgB;QAACD,SAAS,EAAC,mBAAmB;QAAAE,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNd,OAAA,CAACL,OAAO;MACNC,MAAM,EAAEA,MAAO;MACfoB,aAAa,EAAEnB,aAAc;MAC7BoB,cAAc,EAAEnB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFd,OAAA;MAAQe,OAAO,EAAEX,WAAY;MAACI,SAAS,EAAC,kBAAkB;MAAAE,QAAA,GAAC,YAC/C,EAACP,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,EAAC,OAClD;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACZ,EAAA,CAhCQD,gBAAgB;EAAA,QACQP,QAAQ,EACtBD,WAAW;AAAA;AAAAyB,EAAA,GAFrBjB,gBAAgB;AAkCzB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}